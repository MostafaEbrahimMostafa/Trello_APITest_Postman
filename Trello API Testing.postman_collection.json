{
	"info": {
		"_postman_id": "dcbfe864-a1ce-4685-a821-86eb1d6bf026",
		"name": "Trello API Testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39545075"
	},
	"item": [
		{
			"name": "Create Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3 seconds\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"my_board_id\", jsonData.id);\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"board_name\", jsonData.name);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{base_url}}/1/boards/?name=API Testing&key={{kay}}&token={{token}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"1",
						"boards",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "API Testing"
						},
						{
							"key": "key",
							"value": "{{kay}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3 seconds\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate board id\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var BId = pm.environment.get(\"my_board_id\")\r",
							"    pm.expect(jsonData.id).to.eql(BId);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate board  name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var BoardName = pm.environment.get(\"board_name\")\r",
							"    pm.expect(jsonData.name).to.eql(BoardName);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{base_url}}/1/boards/{{my_board_id}}?key={{kay}}&token={{token}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"1",
						"boards",
						"{{my_board_id}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{kay}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3 seconds\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"board_name\", jsonData.name);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{base_url}}/1/boards/{{my_board_id}}?key={{kay}}&token={{token}}&name=Postman Testing",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"1",
						"boards",
						"{{my_board_id}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{kay}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "name",
							"value": "Postman Testing"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create List on a board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3 seconds\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"my_list_id\", jsonData.id);\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"list_name\", jsonData.name);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{base_url}}/1/lists?name=Pendening Testing&idBoard={{my_board_id}}&key={{kay}}&token={{token}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "Pendening Testing"
						},
						{
							"key": "idBoard",
							"value": "{{my_board_id}}"
						},
						{
							"key": "key",
							"value": "{{kay}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get single List on a board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3 seconds\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate list id\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var LId = pm.environment.get(\"my_list_id\")\r",
							"    pm.expect(jsonData.id).to.eql(LId);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate List  name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var ListName = pm.environment.get(\"list_name\")\r",
							"    pm.expect(jsonData.name).to.eql(ListName);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate that list there at software testing board\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var BLID = pm.environment.get(\"my_board_id\")\r",
							"    pm.expect(jsonData.idBoard).to.eql(BLID);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/1/lists/{{my_list_id}}?key={{kay}}&token={{token}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"1",
						"lists",
						"{{my_list_id}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{kay}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update List on a board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3 seconds\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"list_name\", jsonData.name);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{base_url}}/1/lists/{{my_list_id}}?key={{kay}}&token={{token}}&name= IN Progress",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"1",
						"lists",
						"{{my_list_id}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{kay}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "name",
							"value": " IN Progress"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all Lists on a board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3 seconds\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{base_url}}/1/boards/{{my_board_id}}/lists?key={{kay}}&token={{token}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"1",
						"boards",
						"{{my_board_id}}",
						"lists"
					],
					"query": [
						{
							"key": "key",
							"value": "{{kay}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Card on a List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3 seconds\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"my_card_id\", jsonData.id);\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"card_name\", jsonData.name);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{base_url}}/1/cards?idList={{my_list_id}}&key={{kay}}&token={{token}}&name=Log out",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"1",
						"cards"
					],
					"query": [
						{
							"key": "idList",
							"value": "{{my_list_id}}"
						},
						{
							"key": "key",
							"value": "{{kay}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "name",
							"value": "Log out"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get single  Card from List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3 seconds\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate Card id\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var CId = pm.environment.get(\"my_card_id\")\r",
							"    pm.expect(jsonData.id).to.eql(CId);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate Card  name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var CardName = pm.environment.get(\"card_name\")\r",
							"    pm.expect(jsonData.name).to.eql(CardName);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate that Card there at IN progress List\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var CLID = pm.environment.get(\"my_list_id\")\r",
							"    pm.expect(jsonData.idList).to.eql(CLID);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate that Card there at Postman testing Board\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var CBID = pm.environment.get(\"my_board_id\")\r",
							"    pm.expect(jsonData.idBoard).to.eql(CBID);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{base_url}}/1/cards/{{my_card_id}}?key={{kay}}&token={{token}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"1",
						"cards",
						"{{my_card_id}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{kay}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Card on a List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3 seconds\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"card_name\", jsonData.name);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{base_url}}/1/cards/{{my_card_id}}?key={{kay}}&token={{token}}&name=Logout",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"1",
						"cards",
						"{{my_card_id}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{kay}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "name",
							"value": "Logout"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all Card on a List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3 seconds\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{base_url}}/1/lists/{{my_list_id}}/cards?key={{kay}}&token={{token}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"1",
						"lists",
						"{{my_list_id}}",
						"cards"
					],
					"query": [
						{
							"key": "key",
							"value": "{{kay}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create  a checklist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3 seconds\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"my_checklist_id\", jsonData.id);\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"checklist_name\", jsonData.name);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{base_url}}/1/checklists?idCard={{my_card_id}}&key={{kay}}&token={{token}}&name=Valid Secnario ",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"1",
						"checklists"
					],
					"query": [
						{
							"key": "idCard",
							"value": "{{my_card_id}}"
						},
						{
							"key": "key",
							"value": "{{kay}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "name",
							"value": "Valid Secnario "
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get single Checklist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3 seconds\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate Checklist id\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var ChecklistId = pm.environment.get(\"my_checklist_id\")\r",
							"    pm.expect(jsonData.id).to.eql(ChecklistId);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate Checklist  name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var ChecklistName = pm.environment.get(\"checklist_name\")\r",
							"    pm.expect(jsonData.name).to.eql(ChecklistName);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate that Checklist there at logout card\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var ChecklistCID = pm.environment.get(\"my_card_id\")\r",
							"    pm.expect(jsonData.idCard).to.eql(ChecklistCID);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate that Checklist there at Postman testing Board\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var ChecklistBID = pm.environment.get(\"my_board_id\")\r",
							"    pm.expect(jsonData.idBoard).to.eql(ChecklistBID);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/1/checklists/{{my_checklist_id}}?key={{kay}}&token={{token}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"1",
						"checklists",
						"{{my_checklist_id}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{kay}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update a Checklist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3 seconds\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"checklist_name\", jsonData.name);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{base_url}}/1/checklists/{{my_checklist_id}}?key={{kay}}&token={{token}}&name=Valid test cases",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"1",
						"checklists",
						"{{my_checklist_id}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{kay}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "name",
							"value": "Valid test cases"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all checklist on a card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3 seconds\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/1/cards/{{my_card_id}}/checklists?key={{kay}}&token={{token}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"1",
						"cards",
						"{{my_card_id}}",
						"checklists"
					],
					"query": [
						{
							"key": "key",
							"value": "{{kay}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create  checkItem on checklist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3 seconds\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"my_checkitem_id\", jsonData.id);\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"checkitem_name\", jsonData.name);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{base_url}}/1/checklists/{{my_checklist_id}}/checkItems?name=validate logout redirection &key={{kay}}&token={{token}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"1",
						"checklists",
						"{{my_checklist_id}}",
						"checkItems"
					],
					"query": [
						{
							"key": "name",
							"value": "validate logout redirection "
						},
						{
							"key": "key",
							"value": "{{kay}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get single checkitem on checklist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3 seconds\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate Checkitem id\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var CheckitemId = pm.environment.get(\"my_checkitem_id\")\r",
							"    pm.expect(jsonData.id).to.eql(CheckitemId);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate Checkitem  name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var CheckitemName = pm.environment.get(\"checkitem_name\")\r",
							"    pm.expect(jsonData.name).to.eql(CheckitemName);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"Validate that Checkitem there at Valid test cases Checklist\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var CheckitemLID = pm.environment.get(\"my_checklist_id\")\r",
							"    pm.expect(jsonData.idChecklist).to.eql(CheckitemLID);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/1/checklists/{{my_checklist_id}}/checkItems/{{my_checkitem_id}}?key={{kay}}&token={{token}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"1",
						"checklists",
						"{{my_checklist_id}}",
						"checkItems",
						"{{my_checkitem_id}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{kay}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "update a checkitem on a checklist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3 seconds\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"checkitem_name\", jsonData.name);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{base_url}}/1/cards/{{my_card_id}}/checkItem/{{my_checkitem_id}}?key={{kay}}&token={{token}}&name=validate logout working correctly",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"1",
						"cards",
						"{{my_card_id}}",
						"checkItem",
						"{{my_checkitem_id}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{kay}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "name",
							"value": "validate logout working correctly"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all checkitem on a checklist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3 seconds\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/1/checklists/{{my_checklist_id}}/checkItems?key={{kay}}&token={{token}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"1",
						"checklists",
						"{{my_checklist_id}}",
						"checkItems"
					],
					"query": [
						{
							"key": "key",
							"value": "{{kay}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a checkitem",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3 seconds\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/1/checklists/{{my_checklist_id}}/checkItems/{{my_checkitem_id}}?key={{kay}}&token={{token}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"1",
						"checklists",
						"{{my_checklist_id}}",
						"checkItems",
						"{{my_checkitem_id}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{kay}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a  checklist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3 seconds\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/1/checklists/{{my_checklist_id}}?key={{kay}}&token={{token}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"1",
						"checklists",
						"{{my_checklist_id}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{kay}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3 seconds\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/1/cards/{{my_card_id}}?key={{kay}}&token={{token}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"1",
						"cards",
						"{{my_card_id}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{kay}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3 seconds\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{base_url}}/1/lists/{{my_list_id}}/closed?key={{kay}}&token={{token}}&value=true",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"1",
						"lists",
						"{{my_list_id}}",
						"closed"
					],
					"query": [
						{
							"key": "key",
							"value": "{{kay}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "value",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3 seconds\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/1/boards/{{my_board_id}}?key={{kay}}&token={{token}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"1",
						"boards",
						"{{my_board_id}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{kay}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		}
	]
}